<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- The simplest way to build a service with service-sdk-starter-core 
        is to use it as a parent in your project’s POM file, and alternative If you 
        don’t want to use service-sdk-starter-core as your project’s parent, you 
        can declare it as a dependency instead, see pom-as-dependency.xml -->
    <parent>
        <artifactId>service-sdk-starter-core</artifactId>
        <groupId>com.backbase.buildingblocks</groupId>
        <version>10.0.0</version>
        <relativePath />
    </parent>

    <groupId>com.backbase.example</groupId>
    <artifactId>example-service</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>Backbase :: Digital Banking Services :: example-service</name>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>

        <!-- Added spec dependency -->
        <!-- tag::spec-dependency[] -->
        <dependency>
            <groupId>com.backbase.message</groupId>
            <artifactId>messaging-api</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>
        <!-- end::spec-dependency[] -->
        <!--Added for persistence -->
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>persistence</artifactId>
        </dependency>
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>persistence-starter-config</artifactId>
        </dependency>

        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>service-sdk-starter-mapping</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>

        <!-- Required for Local testing -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.200</version>
            <scope>runtime</scope>
        </dependency>
        <!-- Required for MySql -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Persistence -->
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>service-sdk-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Add dependencies for your services, e.g. BB raml specifications, integration clients -->

        <!-- Uncomment the following dependencies if DBS inter-service communication is needed -->
        <!--
             <dependency>
                <groupId>com.backbase.buildingblocks</groupId>
                <artifactId>communication</artifactId>
             </dependency>
             <dependency>
                <groupId>com.backbase.buildingblocks</groupId>
                <artifactId>auth-security</artifactId>
             </dependency>
           -->
    </dependencies>

    <build>
        <plugins>
           <!-- tag::unpack-plugin[] -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.backbase.message</groupId>
                                    <artifactId>messaging-api</artifactId>
                                    <version>1.0.0-SNAPSHOT</version>
                                    <outputDirectory>${project.build.directory}/yaml</outputDirectory>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                </artifactItem>
                            </artifactItems>
                            <includes>**/*.yaml, **/*.json</includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- end::unpack-plugin[] -->

            <!-- tag::codegen-plugin[] -->
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-client-api-code</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <output>${project.build.directory}/generated-sources/api</output>
                    <generateSupportingFiles>true</generateSupportingFiles>
                    <generatorName>spring</generatorName>
                    <strictSpec>true</strictSpec>
                    <generateApiTests>false</generateApiTests>
                    <generateModelTests>false</generateModelTests>
                    <inputSpec>${project.build.directory}/yaml/openapi.yaml</inputSpec>
                    <configOptions>
                        <library>spring-mvc</library>
                        <dateLibrary>legacy</dateLibrary>
                        <interfaceOnly>true</interfaceOnly>
                        <skipDefaultInterface>true</skipDefaultInterface>
                        <useBeanValidation>true</useBeanValidation>
                        <useClassLevelBeanValidation>false</useClassLevelBeanValidation>
                        <useTags>true</useTags>
                        <java8>true</java8>
                        <useOptional>false</useOptional>
                        <apiPackage>com.backbase.dbs.messaging-service.api.service.v2</apiPackage>
                        <modelPackage>com.backbase.dbs.messaging-service.api.service.v2.model</modelPackage>
                    </configOptions>
                </configuration>
            </plugin>
            <!-- end::codegen-plugin[] -->
        </plugins>
    </build>

</project>
